#pragma checksum "D:\HocKi\hocki5\CCPTPM\git\CCPM\01_CCPTPM_Tuan8\01_CCPTPM_Tuan8\Views\Home\Privacy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "577484cf9e107f9899621e3360247dadfabdc982"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Privacy), @"mvc.1.0.view", @"/Views/Home/Privacy.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\HocKi\hocki5\CCPTPM\git\CCPM\01_CCPTPM_Tuan8\01_CCPTPM_Tuan8\Views\_ViewImports.cshtml"
using _01_CCPTPM_Tuan8;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\HocKi\hocki5\CCPTPM\git\CCPM\01_CCPTPM_Tuan8\01_CCPTPM_Tuan8\Views\_ViewImports.cshtml"
using _01_CCPTPM_Tuan8.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"577484cf9e107f9899621e3360247dadfabdc982", @"/Views/Home/Privacy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d33550dbeb76f2848612ea091a23fc9585c7249", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Privacy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\HocKi\hocki5\CCPTPM\git\CCPM\01_CCPTPM_Tuan8\01_CCPTPM_Tuan8\Views\Home\Privacy.cshtml"
  
    ViewData["Title"] = "Privacy Policy";

#line default
#line hidden
#nullable disable
            WriteLiteral("<nav class=\"navbar navbar-expand-lg navbar-light\">\r\n    <div class=\"container\">\r\n\r\n        <div");
            BeginWriteAttribute("class", " class=\"", 145, "\"", 153, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <button>
                100 Danh mục
            </button>
        </div>
        <div class=""text-center "">
            <button>
                999 bài viêt
            </button>
        </div>
        <div class="" text-end h-50"">
            <button>
                999 bình luận
            </button>
        </div>



    </div>
</nav>

<div class=""container "">
    <div class=""row"">
        <div class=""col-md-8"">
            <canvas id=""myChart""></canvas>
        </div>
        <div class=""col-md-4"">
            <canvas id=""myChart1""></canvas>
        </div>
    </div>
</div>

    <script>
            const ctx = document.getElementById('myChart');
            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 3, 5, 2, ");
            WriteLiteral(@"3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true");
            WriteLiteral(@"
                        }
                    }
                }
            });
    </script>




    <script>
            const ctx1 = document.getElementById('myChart1');
            const myChart1 = new Chart(ctx1, {
                type: 'doughnut',
                data: {
                    labels: [
                        'Red',
                        'Blue',
                        'Yellow'
                    ],
                    datasets: [{
                        label: 'My First Dataset',
                        data: [300, 50, 100],
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(255, 205, 86)'
                        ],
                        hoverOffset: 4
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
 ");
            WriteLiteral("                       }\r\n                    }\r\n                }\r\n            });\r\n    </script>\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
